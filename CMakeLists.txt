cmake_minimum_required(VERSION 3.5)

option(CPU_ONLY "Build without GPU support" OFF)
option(USE_NCCL "Build with multiple GPU support" OFF)
option(USE_LOG4CXX "Build with log4cxx support" ON)

project(potato-ddsl)
if(EXISTS /usr/local/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/local/include/ddsl")
    include_directories(SYSTEM "/usr/local/include/ddsl" "/usr/local/include/ddsl/libsvm")
elseif(EXISTS /usr/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/include/ddsl")
    include_directories(SYSTEM "/usr/include/ddsl" "/usr/local/ddsl/libsvm")
endif()
if(USE_LOG4CXX)
    add_definitions(-DUSE_LOG4CXX=ON)
endif()
if(CPU_ONLY)
    message("-- Building without GPU support")
    add_definitions(-DCPU_ONLY=ON)
elseif(USE_NCCL)
    message("-- Building with multiple GPU support")
    add_definitions(-DUSE_NCCL=ON)
endif()

find_package(Caffe REQUIRED)
add_executable(${PROJECT_NAME} "main.cpp" "potatologger.h" "program.cpp" "program.h" "cxxopts.hpp" "evaluation.hpp" "confusion.hpp" "potatoutils.h" "dataloader.h" "dataloader.cpp" "loadeddata.h" "loadeddata.cpp" "dataset.h")
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-march=native" COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
if (COMPILER_OPT_ARCH_NATIVE_SUPPORTED)
    set(CMAKE_CXX_FLAGS "-march=native -pipe -fstack-protector-strong -Wall -Wpedantic -Werror")
endif()
set(DDSL_LIBS af_ddsl png_ddsl svm_ddsl)
set(EXTERNAL_LIBS png)
find_library(LOG4CXX_LIBRARIES log4cxx)
target_link_libraries(${PROJECT_NAME} ${DDSL_LIBS} ${EXTERNAL_LIBS} ${LOG4CXX_LIBRARIES} ${Caffe_LIBRARIES})
