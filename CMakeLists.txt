cmake_minimum_required(VERSION 3.5)

option(CPU_ONLY "Build without GPU support" OFF)
option(USE_NCCL "Build with multiple GPU support" OFF)
option(USE_GLOG "Build with glog support" OFF)
option(USE_LOG4CXX "Build with log4cxx support" ON)

project(potato-ddsl)
if(EXISTS /usr/local/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/local/include/ddsl")
    include_directories(SYSTEM "/usr/local/include/ddsl" "/usr/local/include/ddsl/libsvm")
elseif(EXISTS /usr/include/ddsl/ddsl.hpp)
    message("-- Found ddsl in /usr/include/ddsl")
    include_directories(SYSTEM "/usr/include/ddsl" "/usr/local/ddsl/libsvm")
endif()
if(USE_GLOG)
    add_definitions(-DUSE_GLOG)
    remove_definitions(-DUSE_LOG4CXX)
elseif(USE_LOG4CXX)
    add_definitions(-DUSE_LOG4CXX)
    remove_definitions(-DUSE_GLOG)
    find_library(LOG4CXX_LIBRARIES log4cxx)
endif()
if(CPU_ONLY)
    message("-- Building without GPU support")
    #add_definitions(-DCPU_ONLY=ON)
elseif(USE_NCCL)
    message("-- Building with multiple GPU support")
    #add_definitions(-DUSE_NCCL=ON)
endif()
if(UNIX)
    add_definitions(-DPOTATO_UNIX)
endif()

find_package(Caffe REQUIRED)
include_directories("${CMAKE_SOURCE_DIR}/include")
set(HEADERS "include/potatologger.h" "include/program.h" "include/cxxopts.hpp" "include/minicsv.h" "include/evaluation.hpp" "include/confusion.hpp" "include/potatoutils.h" "include/dataloader.h" "include/loadeddata.h" "include/dataset.h")
set(SOURCES "src/main.cpp" "src/program.cpp" "src/dataloader.cpp" "src/loadeddata.cpp")
add_executable(${PROJECT_NAME} ${HEADERS} ${SOURCES})
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD 14)
set_property(TARGET ${PROJECT_NAME} PROPERTY CXX_STANDARD_REQUIRED ON)
set_property(TARGET ${PROJECT_NAME} PROPERTY LINK_FLAGS "-Wl,-O1,--sort-common,--as-needed,-z,relro")
if(UNIX OR MINGW)
    set(CMAKE_CXX_FLAGS "-march=native -pipe -fstack-protector-strong -Wall -Wpedantic -Werror")
    set(CMAKE_CXX_FLAGS_DEBUG "-g -Og -fvar-tracking-assignments")
    set(CMAKE_CXX_FLAGS_RELEASE "-O2")
elseif(WIN32)
    set(CMAKE_CXX_FLAGS "/march=native /pipe /fstack-protector-strong /Wall /Wpedantic /Werror")
    set(CMAKE_CXX_FLAGS_DEBUG "/g /Og /fvar-tracking-assignments")
    set(CMAKE_CXX_FLAGS_RELEASE "/O2")
endif()
set(DDSL_LIBS af_ddsl png_ddsl svm_ddsl)
set(EXTERNAL_LIBS png)
install(TARGETS ${PROJECT_NAME} DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
message("-- Setting install root to ${CMAKE_INSTALL_PREFIX}")
target_link_libraries(${PROJECT_NAME} ${DDSL_LIBS} ${EXTERNAL_LIBS} ${LOG4CXX_LIBRARIES} ${Caffe_LIBRARIES})
